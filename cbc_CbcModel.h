/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class cbc_CbcModel */

#ifndef _Included_cbc_CbcModel
#define _Included_cbc_CbcModel
#ifdef __cplusplus
extern "C" {
#endif
#undef cbc_CbcModel_STATISTICS_NO
#define cbc_CbcModel_STATISTICS_NO 0L
#undef cbc_CbcModel_STATISTICS_SUMMARY
#define cbc_CbcModel_STATISTICS_SUMMARY 1L
#undef cbc_CbcModel_STATISTICS_SOLUTION
#define cbc_CbcModel_STATISTICS_SOLUTION 2L
#undef cbc_CbcModel_STATISTICS_NODES
#define cbc_CbcModel_STATISTICS_NODES 3L
#undef cbc_CbcModel_DISABLE_STRONG_BRANCHING
#define cbc_CbcModel_DISABLE_STRONG_BRANCHING 0L
/*
 * Class:     cbc_CbcModel
 * Method:    jni_addCutGenerator
 * Signature: (JJILjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_cbc_CbcModel_jni_1addCutGenerator
  (JNIEnv *, jclass, jlong, jlong, jint, jstring);

/*
 * Class:     cbc_CbcModel
 * Method:    jni_assignSolver
 * Signature: (JJZ)V
 */
JNIEXPORT void JNICALL Java_cbc_CbcModel_jni_1assignSolver
  (JNIEnv *, jclass, jlong, jlong, jboolean);

/*
 * Class:     cbc_CbcModel
 * Method:    jni_bestSolution
 * Signature: (J[D)Z
 */
JNIEXPORT jboolean JNICALL Java_cbc_CbcModel_jni_1bestSolution
  (JNIEnv *, jclass, jlong, jdoubleArray);

/*
 * Class:     cbc_CbcModel
 * Method:    jni_branchAndBound
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_cbc_CbcModel_jni_1branchAndBound
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     cbc_CbcModel
 * Method:    jni_delete
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_cbc_CbcModel_jni_1delete
  (JNIEnv *, jclass, jlong);

/*
 * Class:     cbc_CbcModel
 * Method:    jni_getBestPossibleObjValue
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_cbc_CbcModel_jni_1getBestPossibleObjValue
  (JNIEnv *, jclass, jlong);

/*
 * Class:     cbc_CbcModel
 * Method:    jni_getCutGenerator
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_cbc_CbcModel_jni_1getCutGenerator
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     cbc_CbcModel
 * Method:    jni_getNumberCutGenerators
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_cbc_CbcModel_jni_1getNumberCutGenerators
  (JNIEnv *, jclass, jlong);

/*
 * Class:     cbc_CbcModel
 * Method:    jni_getNumberThreads
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_cbc_CbcModel_jni_1getNumberThreads
  (JNIEnv *, jclass, jlong);

/*
 * Class:     cbc_CbcModel
 * Method:    jni_getObjValue
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_cbc_CbcModel_jni_1getObjValue
  (JNIEnv *, jclass, jlong);

/*
 * Class:     cbc_CbcModel
 * Method:    jni_initialSolve
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_cbc_CbcModel_jni_1initialSolve
  (JNIEnv *, jclass, jlong);

/*
 * Class:     cbc_CbcModel
 * Method:    jni_isProvenOptimal
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_cbc_CbcModel_jni_1isProvenOptimal
  (JNIEnv *, jclass, jlong);

/*
 * Class:     cbc_CbcModel
 * Method:    jni_new
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_cbc_CbcModel_jni_1new
  (JNIEnv *, jclass);

/*
 * Class:     cbc_CbcModel
 * Method:    jni_setBestSolution
 * Signature: (J[DIDZ)V
 */
JNIEXPORT void JNICALL Java_cbc_CbcModel_jni_1setBestSolution
  (JNIEnv *, jclass, jlong, jdoubleArray, jint, jdouble, jboolean);

/*
 * Class:     cbc_CbcModel
 * Method:    jni_setLogLevel
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_cbc_CbcModel_jni_1setLogLevel
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     cbc_CbcModel
 * Method:    jni_setNumberStrong
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_cbc_CbcModel_jni_1setNumberStrong
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     cbc_CbcModel
 * Method:    jni_setNumberThreads
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_cbc_CbcModel_jni_1setNumberThreads
  (JNIEnv *, jclass, jlong, jint);

#ifdef __cplusplus
}
#endif
#endif
